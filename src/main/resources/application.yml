api:
  common:
    version: 0.0.1
    title: Tictactoe Game REST API
    description: |
      This is the backend which provide API for Tictactoe game between person and AI or between two persons.
      Rules
      
      1. There are 2 players
      2. Every player is represented by a unique symbol, usually it's X and O
      3. The board consists of a 3x3 matrix. A player wins if they can align 3 of their
      markers in a vertical, horizontal or diagonal line
      4. If no more moves are possible, the game should finish
    license: The Unlicense
    licenseUrl: https://unlicense.org
    termsOfServiceUrl: https://unlicense.org
    contact:
      name: Ihor Mudryy
      url: https://github.com/ihormudryy
      email: ihor.mudryy@gmail.com

  tictactoe:
    get-new-game:
      description: Returns a new Tictactoe game against AI or Person VS Person.
      notes: |
        # Normal response should include the following information
        1. Unique Game ID generated by MongoDb
        2. Game status which should be CREATED for every new game
        3. Winner name should be NOT_DEFINED_YET
        4. Active turn could be PLAYER or PLAYER_1 depending on game type
        5. Game type AGAINST_AI or AGAINST_HUMAN

        # Expected responses
        200 - Game was created

    make-a-move:
      description: Make new move in existing game on 3x3 board.
      notes: |
        User needs to post a new move as JSON object of X and Y coordinates in range between 0 and 2.
        
        # Expected responses
        200 - Move was added and updated game object was returned as response
        
        400 - Bad Request, invalid format of the request. See response message for more information
        
        404 - Game was not found

    get-game-object:
      description: Get game object with full description
      Notes: |
        # Normal response should include the following information
        1. Unique Game ID generated by MongoDb
        2. Game status which could be {CREATED, IN_PROGRESS, FINISHED} 
        3. Winner name cold be { PLAYER | PLAYER_1 | PLAYER_2 | AI | DRAW | NOT_DEFINED_YET } depending on a game type
        4. Active turn could be { PLAYER | PLAYER_1 | PLAYER_2 } depending on a game type
        5. Game type {AGAINST_AI | AGAINST_HUMAN}

        # Expected responses
        200 - Game was found
        
        404 - Game was not found

    delete-game-object:
      description: Delete game and all its moves from DB
      Notes: |
        Simply delete game and all moves linked to it.

server.error.include-message: always
spring.main.banner-mode: "off"
---

spring.config.activate.on-profile: dev
server.port: 8080
spring.data.mongodb:
  port: 27017
  database: tictactoe-db
  host: localhost

---

spring.config.activate.on-profile: docker
server.port: 80
spring.data.mongodb:
  port: 27017
  database: tictactoe-db
  host: mongodb